[{"E:\\otherProjects\\betting app\\bet\\src\\index.js":"1","E:\\otherProjects\\betting app\\bet\\src\\App.js":"2","E:\\otherProjects\\betting app\\bet\\src\\reportWebVitals.js":"3"},{"size":567,"mtime":1610714237889,"results":"4","hashOfConfig":"5"},{"size":3464,"mtime":1610718161065,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"69ux3v",{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\otherProjects\\betting app\\bet\\src\\index.js",[],"E:\\otherProjects\\betting app\\bet\\src\\App.js",["14","15","16","17","18"],"E:\\otherProjects\\betting app\\bet\\src\\reportWebVitals.js",[],{"ruleId":"19","severity":1,"message":"20","line":15,"column":13,"nodeType":"21","endLine":19,"endColumn":4},{"ruleId":"22","severity":1,"message":"23","line":49,"column":26,"nodeType":"24","messageId":"25","endLine":49,"endColumn":28},{"ruleId":"22","severity":1,"message":"26","line":98,"column":24,"nodeType":"24","messageId":"25","endLine":98,"endColumn":26},{"ruleId":"22","severity":1,"message":"26","line":99,"column":24,"nodeType":"24","messageId":"25","endLine":99,"endColumn":26},{"ruleId":"22","severity":1,"message":"26","line":120,"column":24,"nodeType":"24","messageId":"25","endLine":120,"endColumn":26},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='."]