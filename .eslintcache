[{"E:\\otherProjects\\betting app\\bet\\src\\index.js":"1","E:\\otherProjects\\betting app\\bet\\src\\App.js":"2","E:\\otherProjects\\betting app\\bet\\src\\reportWebVitals.js":"3"},{"size":567,"mtime":1610714237889,"results":"4","hashOfConfig":"5"},{"size":3464,"mtime":1610718161065,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"69ux3v",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\otherProjects\\betting app\\bet\\src\\index.js",[],["16","17"],"E:\\otherProjects\\betting app\\bet\\src\\App.js",["18","19","20","21","22"],"import axios from 'axios'\nimport './App.css';\n\nimport {useEffect, useState} from 'react'\nimport {Table ,Button,Card} from 'react-bootstrap'\n\n\nfunction App() {\n\n var [users,setUsers]=useState()\n  var [usersPlaying, setUsersPlaying]=useState([])\n  var [flag, setFlag]=useState(localStorage.getItem('flags'))\n  var [bet,setbet]=useState(getRndInteger)\n  \n  useEffect(async()=>{\n    await axios.get(\"https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json\")\n    .then(res=>setUsers(res.data))\n   \n  },[])\n  \n\n if(!users){\n return <h1>Loading...</h1>\n }\n function getRndInteger(min, max) {\n   min=1\n   max=9\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n const addUsers=(index)=>{\n   if(document.getElementById(index).checked){\n     let a=[...usersPlaying]\n     a.push(index)\n setUsersPlaying(a)\n\n\n   }\n   else{\n    let a=[...usersPlaying]\n    let i=a.indexOf(index)\n    a.splice(i,1)\n    setUsersPlaying(a)\n   }\n   \n  \n }\n const playGame=(event)=>{\n   event.preventDefault()\n   if(usersPlaying.length!=9){\n     alert(\"Make sure You have selected exactly 9 players\")\n   }\n   else{\n     setFlag(false)\n     localStorage.setItem('flags',false)\n   }\n }\n const refresh=()=>{\n   setbet(getRndInteger)\n }\n const goback=()=>{\n   setFlag(true)\n   setUsersPlaying([])\n }\n\n\n  return (\n    <div>{ flag && <>\n     <div style={{textAlign:'center',paddingTop:'5vw'}}> <Button variant=\"secondary\" size=\"lg\" onClick={(event)=>playGame(event)}><h3>START</h3></Button></div>\n      <div style={{display:'inline-block',verticalAlign:'top',paddingTop:'4vw',paddingLeft:'2vw',width:'10vw'}}>\n        <h5 className=\"text-muted\">Playing 9</h5>\n        {usersPlaying.map((i)=>{\n          return (<p>{users[i].Name}</p>)\n        })}\n        \n        \n      </div>\n    <div style={{paddingLeft:'4vw',display:'inline-block',verticalAlign:'top',paddingRight:'1vw',paddingTop:'4vw',width:'80vw'}}>\n      <Table striped bordered hover variant=\"dark\" size=\"sm\">\n  <thead>\n    <tr>\n      <th>SELECT</th>\n      <th>PLAYER NAME</th>\n      <th>BET</th>\n      <th>PRICE</th>\n      <th>WINNINGS</th>\n      <th>FATE</th>\n      \n    </tr>\n  </thead>\n  <tbody>\n    {users.map((user,index)=>{\n      return (\n      <tr>\n      <td>  <input type=\"checkbox\" id={index} onChange={()=>{addUsers(index)}} /></td>\n      <td>{user.Name}</td>\n      <td>{user.Bet}</td>\n      <td>{user.Price}</td>\n      {users[index].Bet==bet ? <td>{parseInt(users[index].Price)*2}</td>:<td>0</td>}\n      {users[index].Bet==bet ? <td>Won</td>:<td>Lose</td>}\n    </tr>\n      )\n\n    })}\n    \n   \n  </tbody>\n</Table>\n    </div>\n    </>\n}\n{!flag &&\n<div>\n {usersPlaying.map( (index)=>{\n   return (\n     <div style={{display:'inline-block' ,padding:'2vw'}}>\n    <Card border=\"secondary\" style={{ width: '14rem',height:'9rem' }} bg=\"dark\" text=\"light\">\n    <Card.Header>{users[index].Name}</Card.Header>\n    <Card.Body>\n      <h5>Bet: {users[index].Bet}</h5>\n      {users[index].Bet==bet ? <h2>WON</h2>:<h2>LOSE</h2>}\n      \n    </Card.Body>\n  </Card>\n  </div>\n   )\n }\n )\n   \n }\n <div style={{display:'inline-block',paddingLeft:'8vw',verticalAlign:'top'}}><h1 style={{fontSize:'150px'}}><b>{bet}</b></h1> </div>\n<div  style={{display:'inline-block',paddingLeft:'10vw',}}> <Button variant=\"dark\" onClick={refresh}>REFRESH</Button></div>\n<div  style={{display:'inline-block',paddingLeft:'10vw',}}> <Button variant=\"dark\" onClick={goback}>GO BACK</Button></div>\n    </div>\n\n\n}\n\n    </div>\n  );\n\n}\n\nexport default App;\n","E:\\otherProjects\\betting app\\bet\\src\\reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":15,"column":13,"nodeType":"29","endLine":19,"endColumn":4},{"ruleId":"30","severity":1,"message":"31","line":49,"column":26,"nodeType":"32","messageId":"33","endLine":49,"endColumn":28},{"ruleId":"30","severity":1,"message":"34","line":98,"column":24,"nodeType":"32","messageId":"33","endLine":98,"endColumn":26},{"ruleId":"30","severity":1,"message":"34","line":99,"column":24,"nodeType":"32","messageId":"33","endLine":99,"endColumn":26},{"ruleId":"30","severity":1,"message":"34","line":120,"column":24,"nodeType":"32","messageId":"33","endLine":120,"endColumn":26},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]