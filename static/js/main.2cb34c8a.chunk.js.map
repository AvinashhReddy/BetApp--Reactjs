{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","usersPlaying","setUsersPlaying","localStorage","getItem","flag","setFlag","getRndInteger","bet","setbet","useEffect","a","axios","get","then","res","data","min","max","Math","floor","random","style","textAlign","paddingTop","Button","variant","size","onClick","event","preventDefault","length","alert","setItem","playGame","display","verticalAlign","paddingLeft","width","className","map","i","Name","paddingRight","Table","striped","bordered","hover","user","index","type","id","onChange","document","getElementById","checked","push","indexOf","splice","addUsers","Bet","Price","parseInt","padding","Card","border","height","bg","text","Header","Body","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2cb34c8a.chunk.js","sourcesContent":["import axios from 'axios'\nimport './App.css';\n\nimport {useEffect, useState} from 'react'\nimport {Table ,Button,Card} from 'react-bootstrap'\n\n\nfunction App() {\n\n var [users,setUsers]=useState()\n  var [usersPlaying, setUsersPlaying]=useState([])\n  var [flag, setFlag]=useState(localStorage.getItem('flags'))\n  var [bet,setbet]=useState(getRndInteger)\n  \n  useEffect(async()=>{\n    await axios.get(\"https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json\")\n    .then(res=>setUsers(res.data))\n   \n  },[])\n  \n\n if(!users){\n return <h1>Loading...</h1>\n }\n function getRndInteger(min, max) {\n   min=1\n   max=9\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n const addUsers=(index)=>{\n   if(document.getElementById(index).checked){\n     let a=[...usersPlaying]\n     a.push(index)\n setUsersPlaying(a)\n\n\n   }\n   else{\n    let a=[...usersPlaying]\n    let i=a.indexOf(index)\n    a.splice(i,1)\n    setUsersPlaying(a)\n   }\n   \n  \n }\n const playGame=(event)=>{\n   event.preventDefault()\n   if(usersPlaying.length!=9){\n     alert(\"Make sure You have selected exactly 9 players\")\n   }\n   else{\n     setFlag(false)\n     localStorage.setItem('flags',false)\n   }\n }\n const refresh=()=>{\n   setbet(getRndInteger)\n }\n const goback=()=>{\n   setFlag(true)\n   setUsersPlaying([])\n }\n\n\n  return (\n    <div>{ flag && <>\n     <div style={{textAlign:'center',paddingTop:'5vw'}}> <Button variant=\"secondary\" size=\"lg\" onClick={(event)=>playGame(event)}><h3>START</h3></Button></div>\n      <div style={{display:'inline-block',verticalAlign:'top',paddingTop:'4vw',paddingLeft:'2vw',width:'10vw'}}>\n        <h5 className=\"text-muted\">Playing 9</h5>\n        {usersPlaying.map((i)=>{\n          return (<p>{users[i].Name}</p>)\n        })}\n        \n        \n      </div>\n    <div style={{paddingLeft:'4vw',display:'inline-block',verticalAlign:'top',paddingRight:'1vw',paddingTop:'4vw',width:'80vw'}}>\n      <Table striped bordered hover variant=\"dark\" size=\"sm\">\n  <thead>\n    <tr>\n      <th>SELECT</th>\n      <th>PLAYER NAME</th>\n      <th>BET</th>\n      <th>PRICE</th>\n      <th>WINNINGS</th>\n      <th>FATE</th>\n      \n    </tr>\n  </thead>\n  <tbody>\n    {users.map((user,index)=>{\n      return (\n      <tr>\n      <td>  <input type=\"checkbox\" id={index} onChange={()=>{addUsers(index)}} /></td>\n      <td>{user.Name}</td>\n      <td>{user.Bet}</td>\n      <td>{user.Price}</td>\n      {users[index].Bet==bet ? <td>{parseInt(users[index].Price)*2}</td>:<td>0</td>}\n      {users[index].Bet==bet ? <td>Won</td>:<td>Lose</td>}\n    </tr>\n      )\n\n    })}\n    \n   \n  </tbody>\n</Table>\n    </div>\n    </>\n}\n{!flag &&\n<div>\n {usersPlaying.map( (index)=>{\n   return (\n     <div style={{display:'inline-block' ,padding:'2vw'}}>\n    <Card border=\"secondary\" style={{ width: '14rem',height:'9rem' }} bg=\"dark\" text=\"light\">\n    <Card.Header>{users[index].Name}</Card.Header>\n    <Card.Body>\n      <h5>Bet: {users[index].Bet}</h5>\n      {users[index].Bet==bet ? <h2>WON</h2>:<h2>LOSE</h2>}\n      \n    </Card.Body>\n  </Card>\n  </div>\n   )\n }\n )\n   \n }\n <div style={{display:'inline-block',paddingLeft:'8vw',verticalAlign:'top'}}><h1 style={{fontSize:'150px'}}><b>{bet}</b></h1> </div>\n<div  style={{display:'inline-block',paddingLeft:'10vw',}}> <Button variant=\"dark\" onClick={refresh}>REFRESH</Button></div>\n<div  style={{display:'inline-block',paddingLeft:'10vw',}}> <Button variant=\"dark\" onClick={goback}>GO BACK</Button></div>\n    </div>\n\n\n}\n\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}